{"version":3,"file":"parser-internals.js","sourceRoot":"","sources":["../src/parser-internals.ts"],"names":[],"mappings":"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","sourcesContent":["import { Schema } from \"./schema\";\ninterface LookupIs {\n\t\"enum\": Enum;\n\t\"message\": Message;\n\t\"extends\": Extends;\n}\nexport interface LookupIn<T extends keyof LookupIs> {\n\tname: string;\n\tis: T;\n\tvalue: LookupIs[T];\n}\nexport type Lookup = LookupIn<keyof LookupIs>[];\nconst MAX_RANGE = 0x1F_FF_FF_FF;\n\n// \"Only repeated fields of primitive numeric types (types which use the varint, 32-bit, or 64-bit wire types) can be declared \"packed\".\"\nexport const PACKABLE_TYPES = Object.freeze([\n\t// varint wire types\n\t'int32', 'int64', 'uint32', 'uint64', 'sint32', 'sint64', 'bool',\n\t// + ENUMS\n\t// 64-bit wire types\n\t'fixed64', 'sfixed64', 'double',\n\t// 32-bit wire types\n\t'fixed32', 'sfixed32', 'float'\n])\nexport const MAP_KEY_TYPES = Object.freeze([\n\t// varint wire types\n\t'int32', 'int64', 'uint32', 'uint64', 'sint32', 'sint64', 'bool',\n\t// + ENUMS\n\t// 64-bit wire types\n\t'fixed64', 'sfixed64',\n\t// 32-bit wire types\n\t'fixed32', 'sfixed32',\n\t// length-delimited type\n\t'string'\n])\nexport type NameMappedValueMap = Map<string, string>;\nconst opts_wm = new WeakMap<Options, NameMappedValueMap>();\n\nexport interface OptionsJSON {[s: string]: string | OptionsJSON;}\nexport interface ReadonlyOptionsJSON {\n\treadonly [s: string]: string | ReadonlyOptionsJSON;\n}\n\nconst $emptyarray = Object.freeze([]),\n\t$emptyobject: ReadonlyOptionsJSON = Object.freeze({})\n\nfunction freeze_deeply(obj: OptionsJSON) {\n\tfor (const key in obj)\n\t\tif (typeof obj[key] === 'object')\n\t\t\tfreeze_deeply(obj[key] as OptionsJSON)\n\treturn Object.freeze(obj) as ReadonlyOptionsJSON\n}\nexport class Options {\n\tparse_bool(name: string): true | false | null {\n\t\tswitch (this.get_option(name)) {\n\t\t\tcase \"true\": return true;\n\t\t\tcase \"false\": return false;\n\t\t\tcase undefined: return null;\n\t\t}\n\t\treturn null\n\t}\n\tget_option(name: string): string | undefined {\n\t\treturn opts_wm.has(this) ? opts_wm.get(this)!.get(name) : undefined\n\t}\n\tget options(): NameMappedValueMap {\n\t\tlet m = opts_wm.get(this);\n\t\tif (!m) {\n\t\t\tm = new Map;\n\t\t\topts_wm.set(this, m);\n\t\t}\n\t\treturn m\n\t}\n\tstatic intoJSON(opts: NameMappedValueMap) {\n\t\tconst o: OptionsJSON = {}\n\t\tfor (const [k, v] of Array.from(opts).sort())\n\t\t\tif (v === '{}') {\n\t\t\t\tlet c = o as OptionsJSON\n\t\t\t\tfor (const ke of k.split('.')) switch (typeof c[ke]) {\n\t\t\t\t\tcase 'object': c = c[ke] as OptionsJSON; break;\n\t\t\t\t\tcase 'string': throw new SyntaxError('bad key for string');\n\t\t\t\t\tcase 'undefined': c = (c[ke] = {});\n\t\t\t\t}\n\t\t\t} else if (k.includes('.')) {\n\t\t\t\tlet c = o\n\t\t\t\tlet kv = k.split('.')\n\t\t\t\tlet last = kv.pop()!\n\t\t\t\tfor (const ke of kv) switch (typeof c[ke]) {\n\t\t\t\t\tcase 'object': c = c[ke] as OptionsJSON; break;\n\t\t\t\t\tcase 'string': throw new SyntaxError('bad key for string');\n\t\t\t\t\tcase 'undefined': c = (c[ke] = {});\n\t\t\t\t}\n\t\t\t\tc[last] = v\n\t\t\t} else o[k] = v;\n\t\treturn o\n\t}\n\toptions_as_object() {\n\t\tif (opts_wm.has(this))\n\t\t\treturn freeze_deeply(Options.intoJSON(opts_wm.get(this)!))\n\t\treturn $emptyobject\n\t}\n\ttoJSON() {\n\t\tconst j: Exclude<any, 'options'> = {}\n\t\tfor (const k in this) {\n\t\t\tif (Array.isArray(this[k])) {\n\t\t\t\t//@ts-ignore\n\t\t\t\tif (this[k].length && 'object' === typeof this[k][0])\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tj[k] = Array.from(this[k], v => v.toJSON ? v.toJSON() : v)\n\t\t\t\telse j[k] = $emptyarray\n\t\t\t} else {\n\t\t\t\tj[k] = this[k] && (\n\t\t\t\t\t'object' === typeof this[k] ? (\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t'function' === typeof this[k].toJSON ? this[k].toJSON() : this[k]\n\t\t\t\t\t) : this[k]\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\treturn {...j, options: this.options_as_object()}\n\t}\n}\nexport class MessageField extends Options {\n\tname = '';\n\ttype = '';\n\ttag = -1;\n\tmap: null | {from: string; to: string} = null;\n\toneof = '';\n\trequired = false;\n\trepeated = false;\n\tdeprecated = false;\n\tpacked = false;\n\toptional = false;\n}\ninterface MessageFields {fields: MessageField[]}\nfunction on_field<T extends MessageFields>({fields}: T, c: TokenCount) {\n\tconst field: MessageField = new MessageField;\n\twhile (!c.done) switch (c.peek()) {\n\t\tcase 'repeated':\n\t\tcase 'required':\n\t\tcase 'optional':\n\t\t\t{\n\t\t\t\tlet t = c.next();\n\t\t\t\tfield.required = t === 'required'\n\t\t\t\tfield.repeated = t === 'repeated'\n\t\t\t\tfield.optional = t === 'optional'\n\t\t\t}\n\t\t\tif (c.peek() === 'map') c.syntax_err('map type cannot be prefixed by required or repeated or optional')\n\t\t\tbreak\n\n\t\tcase 'map':\n\t\t\tfield.type = c.assert('map type', 'map', '<') && 'map';\n\t\t\tfield.map = {\n\t\t\t\tfrom: c.next(),\n\t\t\t\tto: c.assert('map type', ',') && c.next()\n\t\t\t};\n\t\t\tfield.name = c.assert('map type', '>') && c.next();\n\t\t\tif (c.peek() !== '=') c.syntax_err('map name must be followed by a tag assignment')\n\t\t\tbreak\n\n\t\t//@ts-ignore\n\t\tdefault:\n\t\t\tfield.type = c.next()\n\t\t\tfield.name = c.next()\n\t\t\tif (c.peek() !== '=') c.syntax_err('tag assignment must follow field name')\n\n\t\t//@ts-ignore\n\t\tcase '=':\n\t\t\tfield.tag = Number.parseInt(c.next(2), 10);\n\t\t\tif (Number.isNaN(field.tag) || field.tag < 0 || field.tag > MAX_RANGE)\n\t\t\t\tc.syntax_err(`Invalid tag number in message field: ${field.name}, got ${field.tag}`)\n\t\t\tif (c.peek() === ';') break\n\t\t\telse if (c.peek() !== '[') c.syntax_err('field tag must be followed by options or end of field')\n\n\t\t//@ts-ignore\n\t\tcase '[':\n\t\t\ton_inline_options(field, c);\n\t\t\tif (field.parse_bool(\"packed\")) field.packed = true\n\t\t\tif (field.parse_bool(\"deprecated\")) field.deprecated = true\n\t\t\tif (c.peek() !== ';') c.syntax_err('field must end with semicolon')\n\n\t\tcase ';':\n\t\t\tif (field.name === '')\n\t\t\t\tc.syntax_err('Missing field name');\n\t\t\tif (field.type === '')\n\t\t\t\tc.syntax_err(`Missing type in message field: ${field.name}`)\n\t\t\tif (field.tag === -1)\n\t\t\t\tc.syntax_err(`Missing tag number in message field: ${field.name}`)\n\t\t\tfield.tag >>>= 0\n\t\t\tfields.push(field)\n\t\t\tc.assert('field ends with semicolon', ';')\n\t\t\treturn field;\n\t}\n\n\tthrow new Error('No ; found to close message field')\n}\nfunction on_inline_options<T extends Options>({options}: T, c: TokenCount) {\n\twhile (!c.done) switch (c.peek()) {\n\t\tcase '[':\n\t\t//@ts-ignore\n\t\tcase ',': {\n\t\t\tlet name = c.next(2);\n\t\t\tif (name === '(') {\n\t\t\t\tname = c.next();\n\t\t\t\tc.assert('parentheses closed name', ')')\n\t\t\t}\n\t\t\tif (c.peek()[0] === '.') name += c.next()\n\t\t\tc.assert('inline options assignment', '=')\n\t\t\tif (c.peek() === ']') c.syntax_err(`Unexpected ] in field option in ${name}`);\n\t\t\tlet value = c.next();\n\t\t\tif (value === '{') {\n\t\t\t\tvalue = '{}'\n\t\t\t\ton_map_options(options, name, c)\n\t\t\t}\n\t\t\toptions.set(name, value);\n\t\t}\n\t\tif (c.peek() === ',') break\n\t\telse if (c.peek() !== ']') c.syntax_err('inline options must close or continue after a value')\n\t\tcase ']':\n\t\t\tc.assert('inline options close', ']')\n\t\t\treturn;\n\t\tdefault:\n\t\t\tc.syntax_err('field options has no closing tag')\n\t}\n\n\tthrow new SyntaxError('No closing tag for field options');\n}\n\n\nexport function on_package_name(schema: Schema, t: TokenCount) {\n\tschema.package = t.next(2);\n\tt.assert('package name closing semicolon', ';')\n\treturn schema.package\n}\n\nexport function on_syntax_version(schema: Schema, n: TokenCount) {\n\tn.assert('syntax version assignment', 'syntax', '=')\n\tswitch (n.next()) {\n\t\tcase '\"proto2\"':\n\t\tcase \"'proto2'\":\n\t\t\tn.assert(\"syntax version closing semicolon\", \";\");\n\t\t\tschema.syntax = 2;\n\t\t\treturn 2;\n\t\tcase '\"proto3\"':\n\t\tcase \"'proto3'\":\n\t\t\tn.assert(\"syntax version closing semicolon\", \";\");\n\t\t\tschema.syntax = 3;\n\t\t\treturn 3;\n\t}\n\tthrow new SyntaxError(`${n.peek(-1)} is not a valid protobuf syntax version`)\n}\nfunction on_map_options(options: NameMappedValueMap, prefix: string, n: TokenCount) {\n\tlet paren = false\n\twhile (!n.done) switch (n.peek()) {\n\t\tcase '}': n.next(); return;\n\t\tcase ';': throw n.syntax_err('Unexpected end of map options')\n\t\t//@ts-ignore\n\t\tcase '(':\n\t\t\tn.next()\n\t\t\tparen = true\n\t\tdefault: {\n\t\t\tlet key = `${prefix}.${n.next()}`\n\t\t\tif (options.has(key)) n.syntax_err(`Duplicate option named ${key} on same options value`)\n\t\t\tif (paren) n.assert('map options paren', ')')\n\t\t\tif (n.peek() === ':') n.next()\n\t\t\tif (n.peek() === '{') {\n\t\t\t\tn.next()\n\t\t\t\ton_map_options(options, key, n)\n\t\t\t\tlet l = key.lastIndexOf('.')\n\t\t\t\twhile (l > -1 && key) {\n\t\t\t\t\tkey = key.slice(0, l)\n\t\t\t\t\tl = key.lastIndexOf('.')\n\t\t\t\t\tif (options.has(key) && options.get(key) !== '{}') n.syntax_err(`Duplicate option named ${key} on same options value`)\n\t\t\t\t\telse options.set(key, '{}')\n\t\t\t\t}\n\t\t\t} else options.set(key, n.next())\n\t\t\tif (n.peek() === ';') n.next()\n\t\t\tparen = false\n\t\t}\n\t}\n}\nexport function on_option<T extends Options>({options}: T, n: TokenCount) {\n\tlet key = '', value = '', paren = false;\n\twhile (!n.done) switch (n.next()) {\n\t\tcase ';':\n\t\t\tif (options.has(key) && options.get(key) !== '{}') n.syntax_err(`Duplicate option named ${key} on same options value`)\n\t\t\tif (key.includes('.')) {\n\t\t\t\toptions.set(key, value)\n\t\t\t\tlet l = key.lastIndexOf('.')\n\t\t\t\twhile (l > -1 && key) {\n\t\t\t\t\tkey = key.slice(0, l)\n\t\t\t\t\tl = key.lastIndexOf('.')\n\t\t\t\t\tif (options.has(key) && options.get(key) !== '{}') n.syntax_err(`Duplicate option named ${key} on same options value`)\n\t\t\t\t\telse options.set(key, '{}')\n\t\t\t\t}\n\t\t\t} else options.set(key, value)\n\t\t\treturn;\n\n\t\tcase 'option':\n\t\t\tparen = n.peek() === '('\n\t\t\tkey = n.next(paren ? 2 : 1);\n\t\t\tif (paren) n.assert('parenthesised options', ')')\n\t\t\tif (n.peek()[0] === '.') key += n.next()\n\t\t\tbreak;\n\n\t\tcase '=':\n\t\t\tif (key === '') n.syntax_err(`Name must be provided for option with value ${n.peek()}`)\n\t\t\tvalue = n.next()\n\t\t\tif (key === 'optimize_for') switch (value) {\n\t\t\t\tdefault: throw new SyntaxError(`Unexpected value for option optimize_for: ${value}`)\n\t\t\t\tcase 'SPEED': case 'CODE_SIZE': case 'LITE_RUNTIME':\n\t\t\t} else if (value === '{') {\n\t\t\t\tvalue = '{}'\n\t\t\t\ton_map_options(options, key, n)\n\t\t\t}\n\t\t\tbreak\n\t}\n}\nexport class EnumValue extends Options {\n\tconstructor(public name: string, public value: number) {super()}\n}\nexport class Enum extends Options {\n\tenums: Enum[] = [];\n\tvalues: EnumValue[] = [];\n\tallow_alias: boolean = false;\n\tconstructor(public name: string) {super()}\n}\nfunction on_enum_value({values}: Enum, n: TokenCount) {\n\twhile (!n.done) switch (n.peek()) {\n\t\tcase 'reserved':\n\t\t\t// nop until we eat through a semicolon\n\t\t\twhile (n.next() !== ';') ;\n\t\t\treturn;\n\t\tdefault: {\n\t\t\tlet name = n.next()\n\t\t\tn.assert('enum value', '=')\n\t\t\tlet value = Number.parseInt(n.next(), 10);\n\t\t\tif (isNaN(value)) n.syntax_err(`Enum value with name ${name} must not parse as NaN, original is ${n.peek(-1)}`)\n\t\t\tif (value > 0x7f_ff_ff_ff) n.syntax_err(`Enum value must not be greater than the 32 bit signed integer limit`)\n\t\t\tvalue |= 0\n\t\t\tif (value < 0) n.syntax_err(`Enum value must be greater than or equal to 0`)\n\t\t\tlet ret = new EnumValue(name, value);\n\t\t\tif (n.peek() === '[') on_inline_options(ret, n);\n\t\t\tn.assert('enum value closing semicolon', ';')\n\n\t\t\tvalues.push(ret)\n\t\t\treturn ret\n\t\t}\n\t}\n\tthrow new SyntaxError(`enum value was not closed before token completion of file`)\n}\nexport interface Enums {enums: Enum[]};\nexport function on_enum<T extends Enums>({enums}: T, n: TokenCount, l: Lookup) {\n\tconst en: Enum = new Enum(n.next(2))\n\tn.assert('next is opening bracket', '{')\n\twhile (!n.done) switch (n.peek()) {\n\t\tcase 'option':\n\t\t\ton_option(en, n);\n\t\t\tif (en.parse_bool(\"allow_alias\")) en.allow_alias = true;\n\t\t\tbreak;\n\t\tcase '}':\n\t\t\tn.next(n.peek(0) === ';' ? 2 : 1)\n\t\t\tenums.push(en)\n\t\t\tl.push({name: en.name, is: 'enum', value: en})\n\t\t\treturn en;\n\t\tdefault:\n\t\t\ton_enum_value(en, n)\n\t}\n\tthrow new SyntaxError(`enum was not closed before completion of file`)\n}\n\nexport class Message extends Options {\n\tenums: Enum[] = [];\n\textends: Extends[] = [];\n\tmessages: Message[] = [];\n\tfields: MessageField[] = [];\n\textensions: null | {from: number; to: number;} = null;\n\tconstructor(public name: string) {super()}\n}\nexport interface Messages {messages: Message[]}\nexport function on_message<T extends Messages>({messages}: T, c: TokenCount, l: Lookup) {\n\tconst m = new Message(c.next(2))\n\tlet lvl = 0\n\twhile (!c.done) switch (c.peek()) {\n\t\tcase '{': ++lvl; c.next(); break;\n\t\tcase 'map': case 'required': case 'optional': case 'repeated':\n\t\t\ton_field(m, c); break;\n\t\tcase 'enum': {\n\t\t\tconst e = on_enum(m, c, l);\n\t\t\tl.push({name: `${m.name}.${e.name}`, is: 'enum', value: e})\n\t\t}\n\t\tbreak;\n\t\tcase 'message': {\n\t\t\tconst me = on_message(m, c, l);\n\t\t\tl.push({name: `${m.name}.${me.name}`, is: 'message', value: me})\n\t\t}\n\t\tbreak;\n\t\tcase 'extensions': on_extensions(m, c); break;\n\t\tcase 'oneof': {\n\t\t\tlet name = c.next(2);\n\t\t\tc.assert('oneof', '{')\n\t\t\twhile (c.peek() !== '}') {\n\t\t\t\tconst field = on_field(m, c);\n\t\t\t\tfield.oneof = name;\n\t\t\t\tfield.optional = true;\n\t\t\t}\n\t\t\tc.next();\n\t\t}\n\t\tbreak\n\t\tcase 'extend': on_extend(m, c, l); break;\n\t\tcase ';': c.next(); break;\n\t\tcase 'reserved':\n\t\t\tdo c.next();\n\t\t\twhile (c.peek() !== ';');\n\t\t\tbreak;\n\t\tcase 'option':\n\t\t\ton_option(m, c)\n\t\t\tbreak\n\n\t\tdefault: on_field(m, c).optional = true; break;\n\t\tcase '}':\n\t\t\tc.next()\n\t\t\tif (!--lvl) {\n\t\t\t\tmessages.push(m);\n\t\t\t\tl.push({name: m.name, is: \"message\", value: m})\n\t\t\t\treturn m\n\t\t\t}\n\t\t\tbreak;\n\t}\n\tthrow new SyntaxError(`message was not closed before token completion of file`)\n}\nfunction on_extensions(m: Message, c: TokenCount) {\n\tconst from = Number.parseInt(c.next(2), 10)\n\tif (isNaN(from))\n\t\tc.syntax_err(`Invalid \"from\" value in extensions definition`)\n\n\tif (c.next() !== 'to') c.syntax_err(\"Expected keyword 'to' in extensions definition\")\n\tlet sto = c.next()\n\tconst to = sto === 'max' ? MAX_RANGE : Number.parseInt(sto, 10)\n\tif (isNaN(to))\n\t\tc.syntax_err(`Invalid \"to\" value in extensions definition`)\n\n\n\tc.assert('extensions definition', ';')\n\tm.extensions = {from, to}\n}\nexport class Extends extends Options {\n\tmessages: Message[] = []\n\tenums: Enum[] = []\n\tfields: MessageField[] = []\n\tconstructor(public name: string) {super()}\n}\ninterface Extendss {extends: Extends[]}\nexport function on_extend<T extends Extendss>({extends: ex}: T, c: TokenCount, l: Lookup) {\n\tlet e = new Extends(c.peek(1))\n\tconst msg = on_message({messages: []}, c, l)\n\tif (msg.extends.length) c.syntax_err(`Cannot use an extends operator inside an extend key`)\n\tif (msg.extensions) c.syntax_err(`Cannot set extensions on an extend key`)\n\te.messages.push(...msg.messages)\n\te.fields.push(...msg.fields)\n\te.enums.push(...msg.enums)\n\tex.push(e)\n\tl.push({name: e.name, is: \"extends\", value: e} as LookupIn<'extends'>)\n\treturn e\n}\nexport function on_import({imports}: Schema, c: TokenCount) {\n\tlet file = c.next(2).replace(/^(?:\"([^\"]+)\"|'([^']+)')$/, '$1$2')\n\tc.assert('after import', ';')\n\n\timports.push(file)\n}\nexport class RPC extends Options {\n\tconstructor(public name: string) {super()}\n\tinput_type = ''\n\toutput_type = ''\n\tclient_streaming = false\n\tserver_streaming = false\n}\nexport class Service extends Options {\n\tconstructor(public name: string) {super()}\n\tmethods: RPC[] = []\n}\nexport function on_service({services}: Schema, c: TokenCount) {\n\tconst serv = new Service(c.next(2))\n\tc.assert('service open', '{')\n\n\twhile (!c.done) switch (c.peek()) {\n\t\tcase 'option':\n\t\t\ton_option(serv, c);\n\t\t\tbreak;\n\n\t\t//@ts-ignore\n\t\tcase 'rpc':\n\t\t\ton_rpc(serv, c);\n\t\t\tif (c.peek() !== '}') break;\n\n\t\tcase '}':\n\t\t\tc.next();\n\t\t\tif (c.peek() === ';') c.next();\n\t\t\tservices.push(serv);\n\t\t\treturn;\n\t}\n}\nfunction on_rpc({methods}: Service, c: TokenCount) {\n\tconst rpc = new RPC(c.next(2))\n\tc.assert(\"RPC\", '(')\n\n\tif (c.peek() === 'stream') {\n\t\trpc.client_streaming = true\n\t\tc.next()\n\t}\n\trpc.input_type = c.next()\n\tc.assert(\"RPC\", ')', 'returns', '(')\n\n\tif (c.peek() === 'stream') {\n\t\trpc.server_streaming = true\n\t\tc.next()\n\t}\n\trpc.output_type = c.next()\n\tc.assert(\"RPC\", ')')\n\twhile (!c.done) switch (c.peek()) {\n\t\t//@ts-ignore fallthroughCaseInSwitch\n\t\tcase '{':\n\t\t\tc.assert('rpc option open', '{')\n\t\t\tif (c.peek() === '}') break\n\t\t\telse if (c.peek() !== 'option') c.syntax_err(`rpc options must be followed by closing or option tag`)\n\t\t//@ts-ignore fallthroughCaseInSwitch\n\t\tcase 'option':\n\t\t\ton_option(rpc, c);\n\t\t\tif (c.peek() === 'option') break\n\t\t//@ts-ignore fallthroughCaseInSwitch\n\t\tcase '}':\n\t\t\tc.assert('rpc options close', '}')\n\t\tcase ';':\n\t\t\tif (c.peek() === ';') c.next()\n\t\t\tmethods.push(rpc);\n\t\t\treturn rpc\n\t}\n\tthrow new Error('No closing tag for rpc')\n}\n\nexport class TokenCount {\n\tt = 0\n\tl: number\n\tdone: boolean\n\tconstructor(private tokens: readonly string[]) {\n\t\tthis.l = tokens.length\n\t\tthis.done = this.l === 0\n\t}\n\tassert(name: string, next: string, ...further: string[]): true {\n\t\tfor (const tk of [next, ...further]) if (tk !== this.next()) this.syntax_err(`Unexpected ${name} token: ${this.peek(-1)} (expected ${tk})`)\n\t\treturn true\n\t}\n\tpeek(n = 0) {\n\t\treturn this.tokens[this.t + n]\n\t}\n\tnext(n = 1) {\n\t\tif (n < 1) throw new RangeError()\n\t\tthis.done = this.l === (this.t += n);\n\t\treturn this.tokens[this.t - 1];\n\t}\n\tsyntax_err(str: string): never {\n\t\tthrow new SyntaxError(str + ` [around token ${this.t} \"${this.peek()}\"]`)\n\t}\n}\n"]}